name: Java CI with Gradle

on:
  push:
    branches:
      - release

permissions:
  contents: read

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:

      # Code Checkout
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'

      # Gradle Wrapper에 실행 권한 부여
      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x gradlew

      - name: create resources folder if not exists
        run: mkdir -p src/main/resources

      #  application.properties 설정
      - name: set up application.properties
        run: echo "${{ secrets.APPLICATION }}" > src/main/resources/application.properties

      # .env 파일 생성
      - name: set up .env file
        run: echo "${{ secrets.ENV }}" > .env

      # Gradle 빌드
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean bootJar

      # Docker 로그인
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Docker 이미지 빌드
      - name: Docker image build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/classfit-server .


      - name: Docker Hub push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/classfit-server

  deploy-to-server:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image

    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_ADDRESS }}
          username: ita
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/classfit-server
            
            docker stop gclassfit-server || true
            docker rm classfit-server || true
            
            docker run --name classfit-server -d \
              -p 20030:8080 \
              ${{ secrets.DOCKER_USERNAME }}/classfit-server
            
            docker system prune -f